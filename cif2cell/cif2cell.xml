<tool id="cif2cell" name="cif2cell" version="@TOOL_VERSION@+galaxy@WRAPPER_VERSION@" python_template_version="3.5" profile="22.05" license="MIT">
    <description>convert .cif file to .cell</description>
    <macros>
        <!-- version of underlying tool (PEP 440) -->
        <token name="@TOOL_VERSION@">2.0.0a3</token>
        <!-- version of this tool wrapper (integer) -->
        <token name="@WRAPPER_VERSION@">2</token>
    </macros>
    <creator>
        <person givenName="Anish" familyName="Mudaraddi" identifier="https://orcid.org/0000-0002-2135-2705"/>
        <person givenName="Eli" familyName="Chadwick" url="https://github.com/elichad" identifier="https://orcid.org/0000-0002-0035-6475"/>
        <person givenName="Patrick" familyName="Austin" url="https://github.com/patrick-austin" identifier="https://orcid.org/0000-0002-6279-7823"/>
        <organization url="https://muon-spectroscopy-computational-project.github.io/index.html" name="The Muon Spectroscopy Computational Project"/>
    </creator>
    <requirements>
        <requirement type="package" version="2.0.0a3">cif2cell</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
       file_name=\$(sed 's/ //g' <<< '$file.name') &&
       ln -s '$file' \$file_name &&
       cif2cell -f \$file_name -p castep -o out.cell $no_reduce $vca $cartesian
    ]]></command>
    <inputs>
        <param type="data" argument="--file" format="cif" label="Structure file to Convert (.cif)" />
        <param argument="--no-reduce" type="boolean" truevalue="--no-reduce" falsevalue="" display="radio" value="false" label="Do you want to construct a primitive cell using --no-reduce?" help="Use a cif file to convert into a structural (cell) file.">
            <option value="true">Yes</option>
            <option value="false" selected="true">No</option>
        </param>  
        <param argument="--vca" type="boolean" truevalue="--vca" falsevalue="" display="radio" value="false" label="Do you want to set up an alloy using Virtual Crystal Approximation?" help="Use a cif file to convert into a structural (cell) file.">
            <option value="true">Yes</option>
            <option value="false" selected="true">No</option>
        </param>
        <param argument="--cartesian" type="boolean" truevalue="--cartesian" falsevalue="" display="radio" value="false" label="Do you want to generate any output in cartesian coordinates?" help="Use a cif file to convert into a structural (cell) file.">
            <option value="true">Yes</option>
            <option value="false" selected="true">No</option>
        </param>
    </inputs>
    <outputs>
        <data label="Conversion of $file.name to .cell" name="out_cell" format="cell" from_work_dir="out.cell" />
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="file" value="Si.cif" ftype="cif" />
            <output name="out_cell" file="Si_out.cell" compare="diff" lines_diff="2" ftype="cell" />
        </test>
        <test expect_num_outputs="1">
            <param name="file" value="diamond.cif" ftype="cif" />
            <output name="out_cell" file="diamond_out.cell" compare="diff" lines_diff="2" ftype="cell" />
        </test>
    </tests>
    <help><![CDATA[
        usage: cif2cell -f file.cif -p castep -o file.cell
        
        Do not reduce to primitve cell: cif2cell -f file.cif -p castep -o file.cell --no-reduce

        Set up an alloy using virtual crystal approximation: cif2cell -f file.cif -p castep -o file.cell --vca

        Make the program generate any output in cartesian coordinates: cif2cell -f file.cif -p castep -o file.cell --cartesian
        
        Given an input ``.cif`` structure file, convert to an equivalent ``.cell``
        structure file for use with electronic structure program CASTEP.

        .. class:: warningmark
            warning

        **WARNING**: ``.cif`` files may contain errors that prevent cif2cell from running properly.
        If you find that you run cif2cell and do not get a satisfactory ``.cell`` file,
        please consider revising the corresponding ``.cif`` file and, if necessary,
        obtaining an alternative ``.cif`` file from a suitable crystalline database.

        cif2cell is distributed under the GPLv3 license. This tool wrapper is distributed under the MIT license.
    ]]></help>
    <citations>
        <citation type="doi">10.1016/j.cpc.2011.01.013</citation>
    </citations>
</tool>