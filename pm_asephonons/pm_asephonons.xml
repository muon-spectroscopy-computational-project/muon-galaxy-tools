<tool id="pm_asephonons" name="PyMuonSuite Phonons" version="0.1.1" python_template_version="3.5" profile="22.05" license="MIT">
    <description>calculate phonons using ASE and DFTB+</description>
    <macros>
        <!-- citation should be updated with every underlying tool version -->
        <!-- typical fields to update are version, month, year, and doi -->
        <token name="@PYMUONSUITE_CITATION@">
            @software{pymuon-suite,
                author = {Sturniolo, Simone and Liborio, Leandro and Chadwick, Eli and Murgatroyd, Laura and Laverack, Adam and {Muon Spectroscopy Computational Project}},
                license = {GPL-3.0-only},
                title = {{pymuon-suite}},
                url = {https://github.com/muon-spectroscopy-computational-project/pymuon-suite},
                version = {v0.2.1},
                month = {2},
                year = {2022},
                doi = {}
            }
        </token>
        <import>muon_macros.xml</import>
    </macros>
    <creator>
        <person givenName="Jyothish" familyName="Thomas" identifier="https://orcid.org/0000-0003-4724-6924"/>
        <person givenName="Eli" familyName="Chadwick" url="https://github.com/elichad" identifier="https://orcid.org/0000-0002-0035-6475"/>
        <organization url="https://muon-spectroscopy-computational-project.github.io/index.html" name="The Muon Spectroscopy Computational Project"/>
    </creator>
    <requirements>
        <!-- note versioning is different due to multiple dependencies -->
        <requirement type="package" version="0.2.1">pymuonsuite</requirement>
        <requirement type="package" version="21.2">dftbplus</requirement>
        <requirement type="package" version="1.22.4">numpy</requirement> <!-- pinned due to numpy/ASE/DFTB+ incompatibility https://github.com/dftbplus/dftbplus/issues/1064 -->
        <requirement type="package" version="3.0">zip</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        structure_name_internal='input_structure.$pbc.structure.ext' &&
        ln -s '$pho_params' pho_params.yaml &&
        ln -s '$pbc.structure' \$structure_name_internal &&
        cat pho_params.yaml &&
        pm-asephonons \$structure_name_internal pho_params.yaml ; err=\$? &&
        echo "Asephonons output:" &&
        cat asephonons.out &&
        if [ \$err != 0 ] ; then echo "errored" && exit 24 ; fi &&
        ln -s '${name}_phonons.txt' phonon_report.txt &&
        zip -r out_zip.zip '$name' '${name}_phonons.txt' asephonons.out band.out pho_params.yaml
    ]]></command>
    <configfiles>
        <configfile name="pho_params">name: $name
phonon_kpoint_grid: $phonon_kpoint_grid.replace('__ob__', '[').replace('__cb__', ']')
kpoint_grid: $kpoint_grid.replace('__ob__', '[').replace('__cb__', ']')
force_tol: $force_tol
dftb_set: $dftb_set
pbc: $pbc.pbc
force_clean: false</configfile>
    </configfiles>
    <inputs>
        <param argument="name" type="text" value="struct" label="Structure name" help="Name of the structure."/>
        <param argument="phonon_kpoint_grid" type="text" value="[1, 1, 1]" label="Phonon k-points">
            <validator type="regex" message="Input should only contain whitespace, '[', ']', ',' and digits.">^[\s\d,\[\]]+$</validator>
        </param>
        <param argument="kpoint_grid" type="text" value="[1, 1, 1]" label="K-points used for DFTB+ calculation">
            <validator type="regex" message="Input should only contain whitespace, '[', ']', ',' and digits.">^[\s\d,\[\]]+$</validator>
        </param>
        <param argument="force_tol" type="float" min="0.0" value="0.01" label="Force tolerance for optimisation"/>
        <expand macro="dftb_set"/>
        <conditional name="pbc">
            <param argument="pbc" type="select" display="radio" multiple="false" label="Use periodic boundary conditions (PBC)" help="Whether to turn on PBC conditions in DFTB+. Note that XYZ files cannot be used with PBC.">
                <option selected="true" value="true">Yes</option>
                <option value="false">No</option>
            </param>
            <when value="true">
                <param name="structure" type="data" format="cell, cif, extxyz" label="Structure file" help="The structure to generate the phonon report from. Accepted file types: CELL, CIF, XYZ (extended ONLY)."/>
            </when>
            <when value="false">
                <param name="structure" type="data" format="cell, cif, extxyz, xyz" label="Structure file" help="The structure to generate the phonon report from. Accepted file types: CELL, CIF, XYZ (standard or extended)."/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data label="phonons outputs of $pbc.structure.name" name="phonon_outputs" format="zip" from_work_dir="out_zip.zip"/>
        <data label="phonon report for $pbc.structure.name" name="phonon_report" format="txt" from_work_dir="phonon_report.txt"/>
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <param name="name" value="Si"/>
            <param name="dftb_set" value="pbc-0-3"/>
            <conditional name="pbc">
                <param name="structure" value="Si.cell" ftype="cell"/>
            </conditional>
            <output name="phonon_report" file="test_out.txt" ftype="txt" compare="re_match">
                <assert_contents>
                    <has_size value="8255" delta="20"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="2">
            <param name="name" value="Si"/>
            <param name="dftb_set" value="pbc-0-3"/>
            <conditional name="pbc">
                <param name="structure" value="Si.cif" ftype="cif"/>
            </conditional>
            <output name="phonon_report" file="test_out.txt" ftype="txt" compare="re_match">
                <assert_contents>
                    <has_size value="8255" delta="20"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="2">
            <param name="name" value="Si"/>
            <param name="dftb_set" value="pbc-0-3"/>
            <conditional name="pbc">
                <param name="pbc" value="false"/>
                <param name="structure" value="Si.xyz" ftype="xyz"/>
            </conditional>
            <output name="phonon_report" file="test_out.txt" ftype="txt" compare="re_match">
                <assert_contents>
                    <has_size value="8155" delta="20"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="2">
            <param name="name" value="Si"/>
            <param name="dftb_set" value="pbc-0-3"/>
            <conditional name="pbc">
                <param name="structure" value="Si.extxyz" ftype="extxyz"/>
            </conditional>
            <output name="phonon_report" file="test_out.txt" ftype="txt" compare="re_match">
                <assert_contents>
                    <has_size value="8255" delta="20"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
        usage: pm-asephonons structure params

        Given an input structure, this tool generates a phonon report for that structure using the parameters provided.

        PyMuonSuite is distributed under the GPLv3 license. This tool wrapper is distributed under the MIT license.
    ]]></help>
    <citations>
        <citation type="bibtex">
            @PYMUONSUITE_CITATION@
        </citation>
        <citation type="doi">10.1063/1.5085197</citation>
        <citation type="bibtex">
            @article{larsen2017atomic,
                title={The atomic simulation environmentâ€”a Python library for working with atoms},
                author={Larsen, Ask Hjorth and Mortensen, Jens J{\o}rgen and Blomqvist, Jakob and Castelli, Ivano E and Christensen, Rune and Du{\l}ak, Marcin and Friis, Jesper and Groves, Michael N and Hammer, Bj{\o}rk and Hargus, Cory and others},
                journal={Journal of Physics: Condensed Matter},
                volume={29},
                number={27},
                pages={273002},
                year={2017},
                publisher={IOP Publishing}
            }
        </citation>
    </citations>
</tool>
