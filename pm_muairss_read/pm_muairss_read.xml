<tool id="pm_muairss_read" name="PyMuonSuite AIRSS Cluster" version="@TOOL_VERSION@+galaxy@WRAPPER_VERSION@" python_template_version="3.5" profile="22.05" license="MIT">
    <description>run clustering for optimised structures</description>
    <macros>
        <!-- version of underlying tool (PEP 440) -->
        <token name="@TOOL_VERSION@">0.2.3</token>
        <!-- version of this tool wrapper (integer) -->
        <token name="@WRAPPER_VERSION@">0</token>
        <!-- citation should be updated with every underlying tool version -->
        <!-- typical fields to update are version, month, year, and doi -->
        <token name="@TOOL_CITATION@">
            @software{Sturniolo_pymuon-suite_2022,
                author = {Sturniolo, Simone and Liborio, Leandro and Chadwick, Eli and Murgatroyd, Laura and Laverack, Adam and Mudaraddi, Anish and {Muon Spectroscopy Computational Project}},
                license = {GPL-3.0},
                month = {8},
                title = {{pymuon-suite}},
                url = {https://github.com/muon-spectroscopy-computational-project/pymuon-suite},
                version = {v0.2.3},
                doi = {10.5281/zenodo.7025644},
                year = {2022}
            }
        </token>
    </macros>
    <creator>
        <person givenName="Jyothish" familyName="Thomas" identifier="https://orcid.org/0000-0003-4724-6924"/>
        <person givenName="Eli" familyName="Chadwick" url="https://github.com/elichad" identifier="https://orcid.org/0000-0002-0035-6475"/>
        <person givenName="Patrick" familyName="Austin" url="https://github.com/patrick-austin"/>
        <organization url="https://muon-spectroscopy-computational-project.github.io/index.html" name="The Muon Spectroscopy Computational Project"/>
    </creator>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">pymuonsuite</requirement>
        <requirement type="package" version="3.0">zip</requirement>
    </requirements>
    <required_files>
        <include type="literal" path="get_out_folder.py"/>
    </required_files>
    <command detect_errors="exit_code"><![CDATA[
        unzip '$optimisation_results' &&
        if test -f "params.yaml"; then echo "params.yaml present"; else echo "params.yaml missing" && exit 64; fi
        && if ( test -f input_structure.* ) ; then echo "input structure present"; else echo "input structure missing" && exit 64; fi
        && out_folder="`python '${__tool_directory__}/get_out_folder.py'`" &&
        #if $clustering_save.clustering_save_type != "none":
            sed -i '/^clustering_save_type: /{h;s/:.*/: '"$clustering_save.clustering_save_type"'/};\${x;/^$/{s//clustering_save_type: '"$clustering_save.clustering_save_type"'/;H};x}' params.yaml &&
            sed -i '/^clustering_save_format: /{h;s/:.*/: '"$clustering_save.clustering_save_format"'/};\${x;/^$/{s//clustering_save_format: '"$clustering_save.clustering_save_format"'/;H};x}' params.yaml &&
        #end if
        pm-muairss -t r input_structure.* params.yaml
        #if $clustering_save.clustering_save_type == "structures":
            && ln -s *_clusters/* minimal_clusters
        #else if $clustering_save.clustering_save_type == "input":
            && zip -r saved_inputs.zip *_clusters
        #end if
    ]]></command>
    <inputs>
        <param type="data" name="optimisation_results" label="optimised muonated structures (.zip)" format="zip" help="A zip folder containing a set of optimised muonated structures, the original structure, and a YAML parameter file. See below for the expected folder structure."/>
        <conditional name="clustering_save">
            <param argument="clustering_save_type" type="select" value="none" label="Clutering Save Type" help="If set, for each cluster either a structural file or a set of files for subsequent calculation will be generated, corresponding to the structure in the cluster with minimal energy.">
                <option value="none">Do not generate</option>
                <option value="structures">Structures</option>
                <option value="input">Input</option>
            </param>
            <when value="none"/>
            <when value="structures">
                <param argument="clustering_save_format" type="select" display="radio" value="cell" label="Clutering Save Format" help="The format to save each cluster's minimum energy structure as.">
                    <option value="cell">CELL</option>
                    <option value="cif">CIF</option>
                    <option value="xyz">XYZ</option>
                </param>
            </when>
            <when value="input">
                <param argument="clustering_save_format" type="select" display="radio" value="castep" label="Clutering Save Format" help="The format to save each cluster's input files as.">
                    <option value="castep">CASTEP</option>
                    <option value="dftb+">DFTB+</option>
                </param>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data label="Cluster report for $optimisation_results.name" name="cluster_report" format="txt" from_work_dir="${out_folder}/*clusters.txt"/>
        <data label="Cluster data for $optimisation_results.name" name="cluster_data" format="txt" from_work_dir="${out_folder}/*clusters.dat"/>
        <collection name="saved_structures" type="list" label="Minimal energy structures" format="txt">
            <filter>clustering_save["clustering_save_type"] == "structures"</filter>
            <discover_datasets pattern="__name_and_ext__" directory="minimal_clusters"/>
        </collection>
        <data name="saved_inputs" label="Minimal energy inputs" format="zip" from_work_dir="saved_inputs.zip">
            <filter>clustering_save["clustering_save_type"] == "input"</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <param name="optimisation_results" value="uep-out.zip" ftype="zip"/>
            <output name="cluster_report" file="clustout-uep.txt" ftype="txt" lines_diff="2"/>
            <output name="cluster_data" file="clustout-uep.dat" ftype="txt"/>
        </test>
        <test expect_num_outputs="3">
            <param name="optimisation_results" value="uep-out.zip" ftype="zip"/>
            <conditional name="clustering_save">
                <param name="clustering_save_type" value="structures"/>
                <param name="clustering_save_format" value="cell"/>
            </conditional>
            <output name="cluster_report" file="clustout-uep.txt" ftype="txt" lines_diff="2"/>
            <output name="cluster_data" file="clustout-uep.dat" ftype="txt"/>
            <output_collection name="saved_structures" type="list" count="2"/>
        </test>
        <test expect_num_outputs="2">
            <param name="optimisation_results" value="dftb-out.zip" ftype="zip"/>
            <output name="cluster_report" file="clustout-dftb.txt" ftype="txt" lines_diff="2"/>
            <output name="cluster_data" file="clustout-dftb.dat" ftype="txt"/>
        </test>
        <test expect_num_outputs="3">
            <param name="optimisation_results" value="dftb-out.zip" ftype="zip"/>
            <conditional name="clustering_save">
                <param name="clustering_save_type" value="input"/>
                <param name="clustering_save_format" value="dftb+"/>
            </conditional>
            <output name="cluster_report" file="clustout-dftb.txt" ftype="txt" lines_diff="2"/>
            <output name="cluster_data" file="clustout-dftb.dat" ftype="txt"/>
            <output name="saved_inputs" ftype="zip">
                <assert_contents>
                    <has_archive_member path="Si_clusters\/dftb\.LICENSE"/>
                    <has_archive_member path="Si_clusters\/dftb\+\/\.collection"/>
                    <has_archive_member path="Si_clusters\/dftb\+\/Si_min_cluster_\d\/dftb_in\.hsd" n="3"/>
                    <has_archive_member path="Si_clusters\/dftb\+\/Si_min_cluster_\d\/geo_end\.gen" n="3"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
        Given a set of optimised muonated structures, clusters the structures based on similarity.

        If you used the 'Run UEP optimisation' tool for optimisation, the output from that tool can be used as the input to this one.
        If you are bringing files from elsewhere, make sure they fit the expected zip folder structure:

        .. code-block::

            optimised-structures.zip/
            ├─ muon-airss-out/
            │  ├─ uep/
            │  │  ├─ struct_1/
            │  │  │  ├─ <files for optimised struct_1 go here>
            │  │  ├─ struct_2/
            │  │  │  ├─ <files for optimised struct_2 go here>
            │  │  ├─ struct_N/
            │  │  │  ├─ <files for optimised struct_N go here>
            ├─ input.cell
            ├─ params.yaml

        This folder represents a run with the output folder name ``muon-airss-out``, the structure name ``struct``, and the UEP calculator.
        If you use different parameters, these names should match your own settings. (``dftb+`` and ``castep`` are used as folder names for the respective calculators)

        The zip folder itself has been named ``optimised-structures.zip`` in this example, but it doesn't matter what you call it.

        The files ``input.cell`` and ``params.yaml`` must have those exact names. ``input.cell`` should be your original structure file,
        and ``params.yaml`` is the YAML parameter file used to configure the clustering (as well as any prior muonation and optimisation).
        You should have created this YAML file using the 'Create YAML for pm-muairss' tool or written it yourself, then passed it into the
        'Generate muon structures' tool or pm-muairss.

        Command-line usage: pm-muairss [-h] -t r structures parameter_file

        PyMuonSuite is distributed under the GPLv3 license. This tool wrapper is distributed under the MIT license.
    ]]></help>
    <citations>
        <citation type="bibtex">
            @TOOL_CITATION@
        </citation>
        <citation type="doi">10.1063/1.5024450</citation>
        <citation type="doi">10.1063/1.5085197</citation>
        <citation type="doi">10.1063/5.0012381</citation>
        <citation type="bibtex">
            @article {castep,
                author = {Clark, S. J. and Segall, M. D. and Pickard, C. J. and Hasnip, P. J. and Probert, M. I. J. and Refson, K. and Payne, M. C.},
                title = {First principles methods using CASTEP},
                journal = {Zeitschrift fuer Kristallographie},
                volume = {220},
                pages = {567},
                year = {2005}
            }
        </citation>
    </citations>
</tool>
